Задание: Реализация бинарного дерева поиска на языке C#
Цель задания: Овладеть навыками работы с деревьями, реализовать основные операции и балансировку бинарного дерева поиска.
Часть 1: Реализация структуры дерева
Создайте класс для узла дерева (TreeNode). Узел должен содержать следующие поля:
Значение узла (например, тип int).
Левый потомок.
Правый потомок.

Создайте класс для бинарного дерева поиска (BinarySearchTree). Дерево должно содержать следующие методы:
Метод для добавления нового элемента в дерево.
Метод для удаления элемента из дерева.
Метод для поиска элемента в дереве.
Метод для вывода элементов дерева в порядке обхода (in-order traversal).
Метод для проверки, является ли дерево пустым.


Часть 2: Реализация балансировки дерева
Реализуйте метод балансировки дерева. 
Метод должен перестраивать дерево так, чтобы оно было сбалансированным. 
Используйте алгоритм балансировки (например, AVL-дерево).


Часть 3: Тестирование
Создайте набор тестов для проверки корректности реализации бинарного дерева поиска. Ваши тесты должны включать в себя:
Добавление и удаление элементов.
Поиск элементов.
Обход дерева и проверку порядка элементов.
Проверку балансировки после вставки и удаления элементов.
Проведите тестирование и убедитесь, что ваша реализация работает корректно и обеспечивает балансировку дерева.
Подсказки:
Для балансировки дерева, можете использовать методы вращения (rotation) для поддеревьев.
Для обхода дерева можете использовать рекурсию. Изучите, чем отличается обход в ширину и обход в глубину.
Обратите внимание на случаи необходимости балансировки (например, при вставке нового элемента).
При тестировании обратите внимание на крайние случаи, такие как пустое дерево, дерево с одним элементом и т.д.

